{"version":3,"sources":["types/types.js","helpers/fetch.js","actions/polls.js","components/PollAddScreen.js","components/PollPanels/PollsItemScreen.js","components/PollPanels/PollsPanelScreen.js","components/PollsListScreen.js","helpers/preparePolls.js","components/PollPanels/PollAnswerScreen.js","components/PollsResultScreen.js","components/PollQuestionScreen.js","routers/AppRouter.js","reducers/pollReducer.js","store/store.js","VotingApp.js","index.js"],"names":["types","baseUrl","process","fetchBackEnd","endpoint","data","method","url","fetch","headers","body","JSON","stringify","pollAddNew","poll","type","payload","pollsLoaded","polls","pollLoadedByID","voteAdd","initialState","question","option1","option2","option3","option4","PollAddScreen","history","dispatch","useDispatch","useState","formValues","setFormValues","formError","setFormError","handleInputChange","target","name","value","to","className","onSubmit","e","preventDefault","trim","length","a","resp","json","console","log","ok","Swal","fire","err","message","push","rows","onChange","PollsItemScreen","option1votes","option2votes","option3votes","option4votes","key","_id","style","width","date","PollsPanelScreen","title","map","PollsListScreen","useSelector","state","shallowEqual","pollsOrderTop","parse","sort","total","reverse","slice","moment","fromNow","preparePollsTop","pollsOrderRecent","preparePolls","useEffect","PollAnswerScreen","pollID","color","handleVote","onClick","PollsResultScreen","role","data-dismiss","aria-label","aria-hidden","PollQuestionScreen","id","useParams","find","esRespuesta","setEsRespuesta","pollStartLoadedByID","option","voteStartAdd","error","AppRouter","exact","path","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","thunk","VotingApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0970a3cc.chunk.js","sourcesContent":["export const types = {\r\n    pollAddNew: '[poll] Add new poll',\r\n    answerAddNew: '[Answer] Add new Answer',   \r\n\r\n    pollStartAddNew: '[poll-API] Add Start new poll',\r\n    answerStartAddNew: '[Answer-API] Add Start new Answer',   \r\n\r\n    pollStartLoading: '[poll-API] Polls loaded',\r\n    pollsLoaded: '[poll] Polls loaded',\r\n\r\n    pollStartLoadedByID : '[poll] Poll Loaded by ID',\r\n    pollLoadedByID : '[poll] Poll Loaded by ID',\r\n\r\n    voteStartAdd : '[vote] Vote Start Add',\r\n    voteAdd : '[vote] Vote Add',\r\n\r\n\r\n}","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchBackEnd = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    \r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchBackEnd\r\n}","import { types } from \"../types/types\";\r\nimport { fetchBackEnd } from \"../helpers/fetch\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport const pollStartAddNew = (poll) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchBackEnd('polls/new', poll, 'POST');\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n\r\n        if (body.ok) {\r\n\r\n            dispatch(pollAddNew(body.poll));\r\n\r\n        }\r\n        else {\r\n            Swal.fire('Error', body.err.message, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst pollAddNew = (poll) => ({\r\n    type: types.pollAddNew,\r\n    payload: poll\r\n});\r\n\r\n\r\n\r\n\r\nexport const pollStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchBackEnd('polls');\r\n            const body = await resp.json();\r\n\r\n            dispatch(pollsLoaded(body.polls));\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Faild to load Polls', 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst pollsLoaded = (polls) => ({\r\n    type: types.pollsLoaded,\r\n    payload: polls\r\n})\r\n\r\n\r\n\r\nexport const pollStartLoadedByID = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchBackEnd(`polls/${id}`);\r\n            const body = await resp.json();\r\n\r\n            dispatch(pollLoadedByID(body.poll));\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', `Faild to load Poll ${error} `, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst pollLoadedByID = (poll) => ({\r\n    type: types.pollLoadedByID,\r\n    payload: poll\r\n})\r\n\r\n\r\nexport const voteStartAdd = (id, option) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n\r\n            const resp = await fetchBackEnd(`answer/${id}`, {option} , 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                dispatch(voteAdd(body.poll));\r\n                \r\n\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.err.message, 'error');\r\n            }\r\n\r\n\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Faild to Vote Poll', 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst voteAdd = (poll) => ({\r\n    type: types.voteAdd,\r\n    payload: poll\r\n})","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { pollStartAddNew } from '../actions/polls';\r\n\r\nconst initialState = {\r\n    question: '',\r\n    option1: '',\r\n    option2: '',\r\n    option3: '',\r\n    option4: ''\r\n}\r\n\r\nexport const PollAddScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const [formError, setFormError] = useState(null);\r\n\r\n    const { question, option1, option2, option3, option4 } = formValues;\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        switch (true) {\r\n            case (question.trim().length < 10):\r\n                setFormError(`Question is required and must have 10 caracters. Actual:${ question.length }`);\r\n                break;\r\n            case (option1.trim().length <= 0):\r\n                setFormError('Option 1 is required ');\r\n                break;\r\n            case (option2.trim().length <= 0):\r\n                setFormError('Option 2 is required ');\r\n                break;\r\n\r\n        \r\n            default:\r\n                \r\n                dispatch(pollStartAddNew(formValues));\r\n                setFormValues(initialState);\r\n\r\n                history.push('/');\r\n\r\n            break;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className='btn btn-primary float-right'>Back to Home</Link>\r\n            <br />\r\n            <br />\r\n            <div className=\"row my-2\">\r\n                <div className=\"col\">\r\n                    <div className=\"card bg-light pad-fbs\">\r\n\r\n\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm d-flex\">\r\n\r\n                                        <div className=\"card card-body bg-light flex-fill\">\r\n                                            <div className=\"form-group\">\r\n                                                <label>Your Question <span className=\"text-danger\">*</span></label>\r\n\r\n                                                <textarea\r\n                                                    name=\"question\"\r\n                                                    rows=\"10\"\r\n                                                    className=\"form-control mb-3\"\r\n                                                    value={question}\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n\r\n                                                <button type=\"submit\" className=\"btn btn-success btn-block\">Submit Poll</button>\r\n                                            </div>\r\n\r\n\r\n                                            <p><span className=\"text-danger\">* Indicates a requered field</span></p>\r\n\r\n                                            {formError && (<div className=\"alert alert-danger\">{formError}</div>)}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-sm d-flex\">\r\n                                        <div className=\"card card-body bg-light flex-fill\">\r\n\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Option 1<span className=\"text-danger\">*</span></label>\r\n                                                <input\r\n                                                    name=\"option1\"\r\n                                                    className=\"form-control mb-3\"\r\n                                                    value={option1}\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Option 2<span className=\"text-danger\">*</span></label>\r\n                                                <input\r\n                                                    name=\"option2\"\r\n                                                    className=\"form-control mb-3\"\r\n                                                    value={option2}\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Option 3</label>\r\n                                                <input\r\n                                                    name=\"option3\"\r\n                                                    className=\"form-control mb-3\"\r\n                                                    value={option3}\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label>Option 4</label>\r\n                                                <input\r\n                                                    name=\"option4\"\r\n                                                    className=\"form-control mb-3\"\r\n                                                    value={option4}\r\n                                                    onChange={handleInputChange}\r\n                                                />\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const PollsItemScreen = ({ poll }) => {\r\n\r\n    const option1 = poll.option1 && (poll.option1 + ' ' + poll.option1votes + ' votes');\r\n    const option2 = poll.option2 && (poll.option2 + ' ' + poll.option2votes + ' votes');\r\n    const option3 = poll.option3 && (poll.option3 + ' ' + poll.option3votes + ' votes');\r\n    const option4 = poll.option4 && (poll.option4 + ' ' + poll.option4votes + ' votes');\r\n\r\n\r\n    return (\r\n\r\n        <div key={poll._id} className=\"card mt-3\" style={{ width: '100%' }}>\r\n                        \r\n\r\n                        \r\n\r\n\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                <span className=\"text-center\">TODO: CHART</span>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\"><Link to={(`/polls/${poll._id}`)}>{poll.question}</Link></h5>\r\n                        <p className=\"card-text\">{option1} - {option2} - {option3} - {option4}</p>\r\n                        <p className=\"card-text\"><small>({poll.date})</small></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n   \r\n\r\n    )\r\n}","import React from 'react'\r\nimport { PollsItemScreen } from './PollsItemScreen';\r\n\r\nexport const PollsPanelScreen = ({ title, polls}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"col-sm d-flex\">\r\n            <div className=\"card card-body bg-light flex-fill\">\r\n                <h3>{title}</h3>\r\n                {\r\n                    polls.map((poll) => {\r\n                        return (\r\n                            <PollsItemScreen key={poll._id} poll={poll} />\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { pollStartLoading } from '../actions/polls';\r\nimport { PollsPanelScreen } from './PollPanels/PollsPanelScreen';\r\nimport { preparePolls , preparePollsTop } from \"../helpers/preparePolls\";\r\n\r\n// import moment from 'moment';\r\n// //import 'moment/locale/es';\r\n\r\n// //moment.locale('es');\r\n\r\nexport const PollsListScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const polls = useSelector(state => state.polls, shallowEqual);\r\n    \r\n    // 3 horas perdidas sin entender porque polls incluso con [...] mantenia referencia al store. \r\n    // haciendo que siempre se vieran iguales. aun procesando por separado en helpers \r\n    // la solucion fue hacer un deep copy y procesar por separado cada cosa. \r\n    \r\n    let pollsOrderTop = JSON.parse(JSON.stringify(polls))\r\n    pollsOrderTop = preparePollsTop( pollsOrderTop );\r\n\r\n    let pollsOrderRecent = JSON.parse(JSON.stringify(polls))\r\n    pollsOrderRecent = preparePolls( polls );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(pollStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n      \r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to='/polls/new' className='btn btn-primary float-right'>Create your own Poll</Link>\r\n\r\n            <br />\r\n            <br />\r\n            <div className=\"row my-2\">\r\n                <div className=\"col\">\r\n                    <div className=\"card bg-light pad-fbs\">\r\n\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <PollsPanelScreen \r\n                                    key=\"1\"\r\n                                    title=\"Top 3 Polls\"\r\n                                    polls={pollsOrderTop}\r\n                                />\r\n\r\n                                <PollsPanelScreen \r\n                                    key=\"2\"\r\n                                    title=\"Recent Polls\"\r\n                                    polls={pollsOrderRecent}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import moment from 'moment'\r\n\r\nexport const preparePolls = (polls = []) => {\r\n\r\n    return polls\r\n        .map(\r\n            (e) => ({\r\n                ...e,\r\n                date: moment(e.date).fromNow(),\r\n            })\r\n        );\r\n}\r\n\r\nexport const preparePollsTop = (polls = []) => {\r\n\r\n    return polls.sort(({ total: previousID }, { total: currentID }) => previousID - currentID)\r\n        .reverse()\r\n        .slice(0, 3)\r\n        .map(\r\n            (e) => ({\r\n                ...e,\r\n                date: moment(e.date).fromNow(),\r\n            })\r\n        );\r\n}","import React from 'react'\r\n\r\nexport const PollAnswerScreen = ({ pollID, name, value, color = 'success', handleVote}) => {\r\n\r\n    return (\r\n        <div key={pollID + name} className=\"card mt-3\" style={{ width: '100%' }}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title mb-4\">{value}</h5>\r\n                <br />\r\n                <button \r\n                    onClick={()=> handleVote(name)}\r\n                    className={`btn btn-${color} btn-block mt-4`}\r\n                >{value}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const PollsResultScreen = ({ poll }) => {\r\n\r\n\r\n\r\n    const {\r\n        question,\r\n        option1,\r\n        option2,\r\n        option3,\r\n        option4,\r\n        option1votes,\r\n        option2votes,\r\n        option3votes,\r\n        option4votes\r\n    } = poll;\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link to='/' className='btn btn-primary float-right'>Back to Home</Link>\r\n            <br />\r\n            <br />\r\n            <div className=\"row my-2 \">\r\n                <div className=\"col\">\r\n                    <div className=\"card bg-light pad-fbs\">\r\n\r\n                        <h1 className=\"text-center\">{question}</h1>\r\n\r\n\r\n\r\n                        <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                            <strong><i className=\"fas fa-info-circle\"></i>  Thanks for voting!</strong>  Here are the results.\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-4\">\r\n\r\n                                    <div className=\"card card-body bg-light flex-fill\">\r\n\r\n                                        <span className=\"text-center\">TODO: CHART</span>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-sm-8\">\r\n                                    <div className=\"card card-body bg-light flex-fill\">\r\n\r\n\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h3>{option1}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h3>{option1votes} votes</h3>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h3>{option2}</h3>\r\n                                            </div>\r\n                                            <div className=\"col-sm-6\">\r\n                                                <h3>{option2votes} votes</h3>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n                                        {\r\n\r\n                                            (option3) && (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <h3>{option3}</h3>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <h3>{option3votes} votes</h3>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n\r\n                                        {\r\n\r\n                                            (option4) && (\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <h3>{option4}</h3>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <h3>{option4votes} votes</h3>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            )\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { pollStartLoadedByID, voteStartAdd } from '../actions/polls';\r\nimport { PollAnswerScreen } from './PollPanels/PollAnswerScreen';\r\nimport { PollsResultScreen } from './PollsResultScreen';\r\n\r\nexport const PollQuestionScreen = ({ history }) => {\r\n\r\n    if (history.length <= 2)\r\n        history.push('/');\r\n\r\n    const { id } = useParams();\r\n\r\n    const poll = useSelector(state => state.polls).find(poll => poll._id === id);\r\n\r\n    const [esRespuesta, setEsRespuesta] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(pollStartLoadedByID(id));\r\n\r\n    }, [dispatch, id])\r\n\r\n\r\n    try {\r\n\r\n\r\n        const handleVote = (value) => {\r\n            dispatch( voteStartAdd(id, value) );\r\n            setEsRespuesta(true);\r\n        }\r\n    \r\n\r\n        const {\r\n            question,\r\n            option1,\r\n            option2,\r\n            option3,\r\n            option4,\r\n            // option1votes,\r\n            // option2votes,\r\n            // option3votes,\r\n            // option4votes\r\n        } = poll;\r\n\r\n\r\n        return ( !esRespuesta ) ? (\r\n            <>\r\n\r\n            <br />\r\n            <br />\r\n            <div className=\"row my-2 text-center\">\r\n                <div className=\"col\">\r\n                    <div className=\"card bg-light pad-fbs\">\r\n    \r\n                        <h1>{question}</h1>\r\n    \r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm d-flex\">\r\n    \r\n                                    <div className=\"card card-body bg-light flex-fill\">\r\n    \r\n                                        <PollAnswerScreen name=\"option1\" color=\"warning\" value={option1} pollID={id} handleVote={handleVote}/>\r\n                                        \r\n                                        { option3 && ( <PollAnswerScreen name=\"option3\" color=\"success\" value={option3} pollID={id}  handleVote={handleVote}/>)}\r\n    \r\n    \r\n                                    </div>\r\n                                </div>\r\n    \r\n                                <div className=\"col-sm d-flex\">\r\n                                    <div className=\"card card-body bg-light flex-fill\">\r\n    \r\n                                        <PollAnswerScreen name=\"option2\" color=\"danger\" value={option2} pollID={id}  handleVote={handleVote}/>\r\n                                        { option4 && ( <PollAnswerScreen name=\"option4\" color=\"success\" value={option4} pollID={id}  handleVote={handleVote}/>)}\r\n    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )  : ( <PollsResultScreen poll={poll}/> );\r\n\r\n    } catch (error) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { PollAddScreen } from \"../components/PollAddScreen\";\r\nimport { PollsListScreen } from \"../components/PollsListScreen\";\r\nimport { PollQuestionScreen } from \"../components/PollQuestionScreen\";\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/polls/new' component={ PollAddScreen } />\r\n                <Route exact path='/polls/:id' component = { PollQuestionScreen }/>\r\n                <Route exact path='/'component={ PollsListScreen }/>\r\n                <Redirect to='/' />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    polls: []\r\n};\r\n\r\nexport const pollReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case types.pollAddNew:\r\n            return {\r\n                ...state,\r\n                polls: [\r\n                    ...state.polls,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.pollsLoaded:\r\n            return {\r\n                ...state,\r\n                polls: [...action.payload]\r\n            }\r\n\r\n        case types.pollLoadedByID:\r\n\r\n            if (state.polls.length > 0)\r\n                return {\r\n                    ...state,\r\n                    polls: state.polls.map(\r\n                        poll => (poll._id === action.payload._id) ? action.payload : poll\r\n                    )\r\n                }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    polls: [action.payload]\r\n                }\r\n            }\r\n\r\n\r\n        case types.voteAdd:\r\n            return {\r\n                ...state,\r\n                polls: state.polls.map(\r\n                    e => (e._id === action.payload._id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { pollReducer } from '../reducers/pollReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    pollReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const VotingApp = () => {\r\n    return (\r\n        <div className=\"container-fluid mt-3\">\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-body text-center bg-light\">\r\n                    <h1>Voting App</h1>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VotingApp } from './VotingApp';\n\nimport './index.css'\n\nReactDOM.render(\n    <VotingApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}